schema
  @core(feature: "https://specs.apollo.dev/core/v0.2")
  @core(feature: "https://specs.apollo.dev/join/v0.1")
  @core(feature: "https://specs.apollo.dev/tag/v0.1") {
  query: Query
}

directive @core(feature: String!) repeatable on SCHEMA

directive @join__field(
  graph: join__Graph
  requires: join__FieldSet
  provides: join__FieldSet
) on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

directive @join__type(graph: join__Graph!, key: join__FieldSet) repeatable on OBJECT | INTERFACE

directive @join__input(
  graph: join__Graph!
  key: join__FieldSet
) repeatable on OBJECT | INTERFACE | INPUT_OBJECT

directive @join__owner(graph: join__Graph!) on OBJECT | INTERFACE | INPUT_OBJECT

directive @join__graph(name: String!, url: String!) on ENUM_VALUE

directive @tag(
  name: String!
) repeatable on FIELD_DEFINITION | INPUT_FIELD_DEFINITION

scalar join__FieldSet

enum join__Graph {
  CUSTOMERS
    @join__graph(name: "customers", url: "http://localhost:4001")
}


type Customer @join__owner(graph: CUSTOMERS) 
@join__type(graph: CUSTOMERS, key: "id")
{
  id: ID!
    @join__field(graph: CUSTOMERS)
    @tag(name: "hi-from-customers")
  name: String @join__field(graph: CUSTOMERS) @tag(name: "hi-from-customers")
  status: String @join__field(graph: CUSTOMERS) @tag(name: "hi-from-customers")
}

type Query {
  allCustomers: [Customer] @join__field(graph: CUSTOMERS)
}
