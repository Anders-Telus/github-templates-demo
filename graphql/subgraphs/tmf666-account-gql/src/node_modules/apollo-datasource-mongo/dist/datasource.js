"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.MongoDataSource = void 0;

var _apolloDatasource = require("apollo-datasource");

var _apolloServerErrors = require("apollo-server-errors");

var _apolloServerCaching = require("apollo-server-caching");

var _cache = require("./cache");

class MongoDataSource extends _apolloDatasource.DataSource {
  // https://github.com/apollographql/apollo-server/blob/master/packages/apollo-datasource/src/index.ts
  constructor(collection) {
    super();
    const setUpCorrectly = typeof collection === 'object' && Object.keys(collection).length === 1;

    if (!setUpCorrectly) {
      throw new _apolloServerErrors.ApolloError('MongoDataSource constructor must be given an object with a single collection');
    }

    this.collectionName = Object.keys(collection)[0]; // eslint-disable-line

    this[this.collectionName] = collection[this.collectionName];
  }

  initialize(config) {
    this.context = config.context;
    const cache = config.cache || new _apolloServerCaching.InMemoryLRUCache();
    const {
      debug,
      allowFlushingCollectionCache
    } = config;
    const methods = (0, _cache.createCachingMethods)({
      collection: this[this.collectionName],
      cache,
      debug,
      allowFlushingCollectionCache
    });
    Object.assign(this[this.collectionName], methods);
  }

} // eslint-disable-next-line import/prefer-default-export


exports.MongoDataSource = MongoDataSource;